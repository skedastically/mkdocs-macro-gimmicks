{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>This is my personal repo to share some mkdocs tricks I figured out.</p> <ul><li>Installation</li><li>Macros reference</li><li>Examples</li></ul> <p>If you find a problem with the code or docs, please open an issue.</p>"},{"location":"install/","title":"Installation","text":"<p>Most scripts here requires the mkdocs-macro-plugin which involves some setting up</p>"},{"location":"install/#install-macros","title":"Install macros","text":"<p>Install macros via mkdocs-macro-plugin as well as required packages</p> <pre><code>pip install mkdocs-macro-plugin mrkdwn_analysis pathspec python-frontmatter\n</code></pre> <p>And include it in your <code>mkdocs.yml</code> file:</p> <pre><code>plugins:\n  - search\n  - macros\n</code></pre>"},{"location":"install/#create-mainpy","title":"Create <code>main.py</code>:","text":"<p>In your project's root directory (not the docs directory), create a <code>main.py</code> file and copy the contents of main.py into it. </p> <p>Now you can start using commands such as <code>{{ listfiles() }}</code></p> <p>If you already used macros with the file, simply append the scripts inside <code>def define_env(env):</code> to your file.</p>"},{"location":"install/#further-resources","title":"Further resources","text":"<ul> <li>mkdocs-macro-plugin's website</li> </ul>"},{"location":"examples/","title":"Examples","text":"<p>The directory details of <code>./example</code> is as below</p> Tree<code>./.nav.yml</code><code>./another-section/.nav.yml</code> <pre><code>.\n\u251c\u2500\u2500 _hidden.md\n\u251c\u2500\u2500 another-section\n\u2502   \u251c\u2500\u2500 firstpage.md\n\u2502   \u251c\u2500\u2500 README.md\n\u2502   \u2514\u2500\u2500 .nav.yml\n\u251c\u2500\u2500 bar.md\n\u251c\u2500\u2500 foo.py\n\u2514\u2500\u2500 index.md\n</code></pre> <pre><code>nav:\n  - index.md\n  - \"*\"\n</code></pre> <pre><code>nav:\n- firstpage.md\n- readme.md\n</code></pre>"},{"location":"examples/#list-all-files-including-markdown","title":"List all files including Markdown","text":"<pre><code>{{ listfiles(excludeMarkdown = False, squeeze = True) }}\n</code></pre>"},{"location":"examples/#result","title":"Result","text":"<ul><li>baz.md</li><li>foo.py</li><li>index.md</li><li>non-index-page.md</li></ul>"},{"location":"examples/#list-all-files-without-markdown-and-with-larger-list-paddings","title":"List all files without Markdown and with larger list paddings","text":"<pre><code>{{ listfiles(title = 'See all files here', squeeze = True) }}\n</code></pre>"},{"location":"examples/#result_1","title":"Result","text":"<ul><li>foo.py</li></ul>"},{"location":"examples/#list-navigations-unsqueezed-and-with-current-page","title":"List navigations unsqueezed and with current page","text":"<pre><code>{{ listnavs(excludeCurrentPage = False, squeeze = False) }}\n</code></pre>"},{"location":"examples/#result_2","title":"Result","text":"<ul><li>Examples</li></ul> <ul><li>A-section</li></ul> <ul><li>baz.md file</li></ul> <ul><li>Non-index.md navs and files</li></ul> <ul><li>Another section</li></ul>"},{"location":"examples/#list-navigations-without-finding-section-index","title":"List navigations without finding section index","text":"<pre><code>{{ listnavs(findSectionIndex = False) }}\n</code></pre>"},{"location":"examples/#result_3","title":"Result","text":"<ul><li>A-section</li><li>baz.md file</li><li>Non-index.md navs and files</li><li>Another section</li></ul> <p>Info</p> <p>The firstpage, as ordered in <code>example/another-section/.nav.yml</code> is now taken as the section's entrypoint page</p>"},{"location":"examples/#content-tab-that-shows-the-maximum-of-everything-in-this-directory","title":"Content tab that shows the maximum of everything in this directory","text":"<pre><code>{{ tabnav(excludeMarkdown = False, excludeCurrentPage = False) }}\n</code></pre>"},{"location":"examples/#result_4","title":"Result","text":"\ud83d\udd17 - Navigation\ud83d\udcc4 - Files <p><ul><li>Examples</li><li>A-section</li><li>baz.md file</li><li>Non-index.md navs and files</li><li>Another section</li></ul></p> <p><ul><li>baz.md</li><li>foo.py</li><li>index.md</li><li>non-index-page.md</li></ul></p>"},{"location":"examples/baz/","title":"baz.md file","text":"<p>Honestly this is just a sample file</p>"},{"location":"examples/non-index-page/","title":"Non-index.md navs and files","text":"<p>listfiles() and listnavs() can work here too</p> CodeResult <pre><code>{{ listfiles() }}\n</code></pre> <p><ul><li>foo.py</li></ul></p> CodeResult <pre><code>{{ listnavs(excludeCurrentPage = True) }}\n</code></pre> <p><ul><li>Examples</li><li>A-section</li><li>baz.md file</li><li>Another section</li></ul></p> <p>Note</p> <p>With <code>excludeCurrentPage = True</code>, <code>bar.md</code> is now excluded and <code>index.md</code> (titled \"Examples\") is now included</p>"},{"location":"examples/a-section/a-section/","title":"A File","text":"<p>This file's path is in <code>/examples/a-section/a-section.md</code>, but is part of the <code>Example</code> Section due to <code>.nav.yml</code> resolution.</p>"},{"location":"examples/another-section/","title":"Index","text":"<p>This page is supposed to be the section's index page. However, it isn't ordered first in this <code>another-section</code> Section.</p>"},{"location":"examples/another-section/firstpage/","title":"firstpage","text":"<p>This page is supposed to be ordered first in \"another-section\" Section.</p>"},{"location":"macros-reference/listfiles/","title":"List directory files","text":"<p>To list files of a page's current directory, simply call </p> <pre><code>{{ listfiles() }}\n</code></pre> <p>As a feature, this function also match ignore patterns in mkdocs.yml's <code>exclude_docs:</code> parameter, so hidden files can stay outside of the list.</p> <p>This function should not be called inside a paragraph/another element block as it won't render properly.</p> <p>Nested listings are not supported (yet?)</p>"},{"location":"macros-reference/listfiles/#flags","title":"Flags","text":"<p>You can also include these flags inside listfiles e.g. with <code>listfiles(title = True, squeeze = False)</code></p> Name Default value Description <code>title</code> <code>False</code> Title of the files list inside an <code>&lt;h2&gt;</code> element, provided as a string. Also defaults to \"Files in this directory\" if <code>True</code>, and no title if <code>False</code> <code>excludeMarkdown</code> <code>True</code> Whether to exclude Markdown files from list <code>squeeze</code> <code>False</code> Whether to render single-spaced lists (<code>True</code>) that looks squeezed rather than double-spaced lists (<code>False</code>)"},{"location":"macros-reference/listnavs/","title":"List navigations","text":"<p>To list navigations<sup>1</sup> within a page's section, use</p> <pre><code>{{ listnavs() }}\n</code></pre> <p>This function will attempt to find a page's parent, and iterate through its list to find links. It is useful e.g. for an index of subcontents especially when you wish not to use the included navigation table.</p> <p>Please note that it employs various heuristics to get a section's pages, as the <code>Navigation</code> object returned in mkdocs is very incomplete (see these issues: ).</p> <p>This function should not be called inside a paragraph/another element block as it won't render properly.</p> <p>Nested listings are not supported (yet?)</p>"},{"location":"macros-reference/listnavs/#usage-with-awesome-nav","title":"Usage with awesome-nav","text":"<p><code>listnavs()</code> can be used with awesome-nav, but you must tweak the latter plugin a bit to generate a Navigation object that can be used by this macro.</p>"},{"location":"macros-reference/listnavs/#tweaking-awesome-nav-plugin","title":"Tweaking awesome-nav plugin","text":""},{"location":"macros-reference/listnavs/#the-manual-way-edit-your-instances-plugin-file","title":"The manual way - edit your instance's plugin file","text":"1. Find plugin.py2. Edit plugin.py <p>Find awesome-nav's library path within your system. Usually, it's at somewhere like <code>/usr/lib/python3.12/site-packages/mkdocs_awesome_nav/</code>. Inside that directory there should be a <code>plugin.py</code> file that looks like this</p> <p>Using an editor, change the last line of <code>plugin.py</code> </p> From:To: <pre><code>        return nav\n</code></pre> <pre><code>        config.plugins['awesome-nav'].generated_nav = nav   \n        return nav\n</code></pre>"},{"location":"macros-reference/listnavs/#the-semi-auto-way-apply-git-patch-and-then-install-the-plugin","title":"The semi-auto way - Apply git patch and then install the plugin","text":"<p>You can instead build your own awesome-nav plugin with my provided <code>awesome-nav-tweak.patch</code>, using example steps below for reference:</p> <pre><code>git clone https://github.com/lukasgeiter/mkdocs-awesome-nav/\nwget https://raw.githubusercontent.com/skedastically/mkdocs-macro-gimmicks/refs/heads/main/awesome-nav-tweak.patch\ngit apply awesome-nav-tweak.patch --directory mkdocs-awesome-nav\npip install ./mkdocs-awesome-nav # install from directory\n</code></pre> <p>This should be easy to automate.</p>"},{"location":"macros-reference/listnavs/#flags","title":"Flags","text":"<p>You can also include these flags inside listnavs i.e. with <code>listnavs(excludeCurrentPage = False)</code></p> Name Default value Description <code>title</code> <code>False</code> Title of the files list inside an <code>&lt;h2&gt;</code> element, provided as a string. Also defaults to \"Navigation\" if <code>True</code>, and no title if <code>False</code> <code>findSectionIndex</code> <code>True</code> Attempt to find and use <code>index.md</code> or <code>README.md</code> as a subsection's index file, instead of whatever is the first file provided for that subsection's items list <code>excludeCurrentPage</code> <code>True</code> Whether to exclude current page from nav list <code>squeeze</code> <code>False</code> Whether to render single-spaced lists (<code>True</code>) that looks squeezed rather than double-spaced lists (<code>False</code>) <ol> <li> <p>links to other objects like Sections and Pages\u00a0\u21a9</p> </li> </ol>"},{"location":"macros-reference/tabs/","title":"Files + Navs content tabs","text":"<p>The <code>{{ tabnav() }}</code> function provides selectable content tabs to view both files and navigations. For instance, the tabnav() of this directory has no files:</p> \ud83d\udd17 - Navigation\ud83d\udcc4 - Files <p><ul><li>List directory files</li><li>List navigations</li><li>Files + Navs content tabs</li></ul></p> <p><ul></ul></p> <p>This function should not be called inside a paragraph/another element block as it won't render properly.</p> <p>Nested listings are not supported (yet?)</p>"},{"location":"macros-reference/tabs/#flags","title":"Flags","text":"Name Default value Description <code>navTitle</code> <code>\"\ud83d\udcc4 - Files\"</code> Title for the navigation content tab <code>filesTitle</code> <code>\"\ud83d\udd17 - Navigation\"</code> Title for the files content tab <code>findSectionIndex</code> <code>True</code> (from <code>listnavs()</code>) Attempt to find and use <code>index.md</code> or <code>README.md</code> as a subsection's index file, and fallback to whatever is the first file provided for that subsection's items list if nothing's found <code>excludeCurrentPage</code> <code>True</code> (from <code>listnavs()</code>) Whether to exclude current page from nav list <code>excludeMarkdown</code> <code>True</code> (from <code>listfiles()</code>) Whether to exclude Markdown files from list <code>squeeze</code> <code>False</code> Whether to render single-spaced lists (<code>True</code>) that looks squeezed rather than double-spaced lists (<code>False</code>)"}]}